alias functionnum R1;

if(functionnum==1)then
alias pid R2;
pid=3;
while(pid!=15)do
if([PROCESS_TABLE+pid*16+4]==WAIT_PROCESS && [PROCESS_TABLE+pid*16+6]==0)then
break;
endif;
pid=pid+1;
endwhile;


if(pid==15)then
pid=3;
while(pid!=15)do
	if([PROCESS_TABLE+pid*16+4]==WAIT_SEMAPHORE && [PROCESS_TABLE+pid*16+6]==0)then
		break;
	endif;
pid=pid+1;
endwhile;
endif;
alias flag R4;
flag=0;

alias pid1 R3;
print "dhehehehehdhehdhe";

if(pid==15)then
pid=3;
pid1=3;
	while(pid1!=15)do
	
	if([PROCESS_TABLE+pid1*16+4]!=RUNNING )then
	if([PROCESS_TABLE+pid1*16+4]!=TERMINATED)then
	if([PROCESS_TABLE+pid1*16+4]!=ALLOCATED)then
	if([PROCESS_TABLE+pid1*16+6]!=1)then
		if([PROCESS_TABLE+pid1*16]>[PROCESS_TABLE+pid*16])then
			pid=pid1;
		endif;		
		flag=1;
	endif;
	endif;
	endif;
	endif;
	
	pid1=pid1+1;
	endwhile;

if(flag==0)then
	[SYSTEM_STATUS_TABLE+5]=0;
	return;
endif;
endif;
[PROCESS_TABLE+pid*16]=0;



alias count R6;
count=2;
while(count<=9)do

	alias pagenum R7;
		pagenum=PAGE_TABLE_BASE+pid*20+count*2;
flag=0;
if([pagenum]!=-1)then
	
		if(count==2 || count==3)then
		if([MEMORY_FREE_LIST+[pagenum]]!=0 && [MEMORY_FREE_LIST+[pagenum]]!=1)then
		flag=1;
		endif;
		endif;
if(flag==0)then
if(count==2 || count==3 || count==8 || count==9)then
	multipush(R1,R2,R3,R4,R5,R6,R7,R8);
		alias functionnum R1;
		functionnum=6;
		call MOD_2;
	multipop(R1,R2,R3,R4,R5,R6,R7,R8);
	[DISK_MAP_TABLE+10*pid+count]=R0;


	R3=[R7];
	multipush(R1,R2,R4,R5,R6,R7,R8);
		alias functionnum1 R1;
		functionnum1=1;
		
		R4=R0;
		//print "ytytytyt";
		//print R3;
		print R4;
		call MOD_4;
	multipop(R1,R2,R4,R5,R6,R7,R8);

endif;
	R2=[R7];
	multipush(R1,R3,R4,R5,R6,R7,R8);
		alias functionnum2 R1;
		functionnum2=2;
		
		call MOD_2;
	multipop(R1,R3,R4,R5,R6,R7,R8);
	[pagenum]=-1;
	[pagenum+1]="0000";	
endif;
endif;
count=count+1;
endwhile;

[PROCESS_TABLE+pid*16+6]=1;
[SYSTEM_STATUS_TABLE+4]=[SYSTEM_STATUS_TABLE+4]+1;

[SYSTEM_STATUS_TABLE+5]=0;

return;
endif;




if(functionnum==2)then

alias pid R2;
alias pid1 R3;
pid=3;
pid1=3;
alias flag R4;
flag=0;
breakpoint;
while(pid!=15)do
if( [PROCESS_TABLE+pid*16+6]==1 && [PROCESS_TABLE+pid*16+4]==READY)then
	
	while(pid1!=15)do
	if([PROCESS_TABLE+pid1*16+4]==READY && [PROCESS_TABLE+pid1*16+6]==1)then
		if([PROCESS_TABLE+pid1*16]>[PROCESS_TABLE+pid*16])then
			pid=pid1;
		endif;
		flag=1;
	endif;
	pid1=pid1+1;
	endwhile;
	break;
endif;
pid=pid+1;
endwhile;

if(flag==0)then
[SYSTEM_STATUS_TABLE+5]=0;
return;
endif;


alias count R6;
count=2;


while(count<=9)do
	if(count==4)then
	count=count+4;
	endif;
alias pagenum R7;
pagenum=PAGE_TABLE_BASE+pid*20+count*2;

alias block R9;
block=[DISK_MAP_TABLE+pid*10+count];

if(block!=-1)then
	multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9);
		alias functionnum R1;
		functionnum=1;
		call MOD_2;
	multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9);

	[pagenum]=R0;
	[pagenum+1]="0110";
	
	R4=R9;
	multipush(R1,R2,R3,R5,R6,R7,R8,R9);
		alias functionnum2 R1;
		functionnum2=2;
		R3=R0;
		call MOD_4;
	multipop(R1,R2,R3,R5,R6,R7,R8,R9);

	multipush(R1,R2,R3,R4,R5,R6,R7,R8);
		alias functionnum1 R1;
		functionnum1=4;
		call MOD_2;
	multipop(R1,R2,R3,R4,R5,R6,R7,R8);
	
	
	[DISK_MAP_TABLE+pid*10+count]=-1;
	
endif;
count=count+1;
endwhile;
[PROCESS_TABLE+pid*16]=0;
[PROCESS_TABLE+pid*16+6]=0;
[SYSTEM_STATUS_TABLE+4]=[SYSTEM_STATUS_TABLE+4]-1;
[SYSTEM_STATUS_TABLE+5]=0;

return;

endif;
